/*
* generated by Xtext
*/
grammar InternalQDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.qdsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.qdsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.qdsl.services.QDslGrammarAccess;

}

@parser::members {
 
 	private QDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(QDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestion
entryRuleQuestion 
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionAccess().getGroup()); }
(rule__Question__Group__0)
{ after(grammarAccess.getQuestionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulequestionContent
entryRulequestionContent 
:
{ before(grammarAccess.getQuestionContentRule()); }
	 rulequestionContent
{ after(grammarAccess.getQuestionContentRule()); } 
	 EOF 
;

// Rule questionContent
rulequestionContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionContentAccess().getGroup()); }
(rule__QuestionContent__Group__0)
{ after(grammarAccess.getQuestionContentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnswerType
entryRuleAnswerType 
:
{ before(grammarAccess.getAnswerTypeRule()); }
	 ruleAnswerType
{ after(grammarAccess.getAnswerTypeRule()); } 
	 EOF 
;

// Rule AnswerType
ruleAnswerType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnswerTypeAccess().getGroup()); }
(rule__AnswerType__Group__0)
{ after(grammarAccess.getAnswerTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChooseFrom
entryRuleChooseFrom 
:
{ before(grammarAccess.getChooseFromRule()); }
	 ruleChooseFrom
{ after(grammarAccess.getChooseFromRule()); } 
	 EOF 
;

// Rule ChooseFrom
ruleChooseFrom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChooseFromAccess().getGroup()); }
(rule__ChooseFrom__Group__0)
{ after(grammarAccess.getChooseFromAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnswerType__AtypeAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerTypeAccess().getAtypeRadio_buttonKeyword_1_0_0()); }

	'radio_button' 

{ after(grammarAccess.getAnswerTypeAccess().getAtypeRadio_buttonKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getAnswerTypeAccess().getAtypeCheck_boxKeyword_1_0_1()); }

	'check_box' 

{ after(grammarAccess.getAnswerTypeAccess().getAtypeCheck_boxKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getAnswerTypeAccess().getAtypeFree_textKeyword_1_0_2()); }

	'free_text' 

{ after(grammarAccess.getAnswerTypeAccess().getAtypeFree_textKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getQuestionsKeyword_0()); }

	'questions' 

{ after(grammarAccess.getModelAccess().getQuestionsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
(rule__Model__NameAssignment_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getQuestionsAssignment_3()); }
(rule__Model__QuestionsAssignment_3)*
{ after(grammarAccess.getModelAccess().getQuestionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Question__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__0__Impl
	rule__Question__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getQuestionItemKeyword_0()); }

	'questionItem' 

{ after(grammarAccess.getQuestionAccess().getQuestionItemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__1__Impl
	rule__Question__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getNameAssignment_1()); }
(rule__Question__NameAssignment_1)
{ after(grammarAccess.getQuestionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__2__Impl
	rule__Question__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__3__Impl
	rule__Question__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getContensAssignment_3()); }
(rule__Question__ContensAssignment_3)
{ after(grammarAccess.getQuestionAccess().getContensAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__4__Impl
	rule__Question__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAnswerTypesAssignment_4()); }
(rule__Question__AnswerTypesAssignment_4)
{ after(grammarAccess.getQuestionAccess().getAnswerTypesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__5__Impl
	rule__Question__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getChooseFromsAssignment_5()); }
(rule__Question__ChooseFromsAssignment_5)?
{ after(grammarAccess.getQuestionAccess().getChooseFromsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__QuestionContent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuestionContent__Group__0__Impl
	rule__QuestionContent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionContent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionContentAccess().getQuestionContentKeyword_0()); }

	'questionContent' 

{ after(grammarAccess.getQuestionContentAccess().getQuestionContentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionContent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuestionContent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionContent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionContentAccess().getQcontentAssignment_1()); }
(rule__QuestionContent__QcontentAssignment_1)
{ after(grammarAccess.getQuestionContentAccess().getQcontentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnswerType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnswerType__Group__0__Impl
	rule__AnswerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnswerType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerTypeAccess().getAnswerTypeKeyword_0()); }

	'AnswerType' 

{ after(grammarAccess.getAnswerTypeAccess().getAnswerTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnswerType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnswerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnswerType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerTypeAccess().getAtypeAssignment_1()); }
(rule__AnswerType__AtypeAssignment_1)
{ after(grammarAccess.getAnswerTypeAccess().getAtypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChooseFrom__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChooseFrom__Group__0__Impl
	rule__ChooseFrom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseFrom__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChooseFromAccess().getChooseFromAction_0()); }
(

)
{ after(grammarAccess.getChooseFromAccess().getChooseFromAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChooseFrom__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChooseFrom__Group__1__Impl
	rule__ChooseFrom__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseFrom__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChooseFromAccess().getChooseFromKeyword_1()); }

	'chooseFrom' 

{ after(grammarAccess.getChooseFromAccess().getChooseFromKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChooseFrom__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChooseFrom__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseFrom__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChooseFromAccess().getChoiseAssignment_2()); }
(rule__ChooseFrom__ChoiseAssignment_2)*
{ after(grammarAccess.getChooseFromAccess().getChoiseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Model__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__QuestionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getQuestionsQuestionParserRuleCall_3_0()); }
	ruleQuestion{ after(grammarAccess.getModelAccess().getQuestionsQuestionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__ContensAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getContensQuestionContentParserRuleCall_3_0()); }
	rulequestionContent{ after(grammarAccess.getQuestionAccess().getContensQuestionContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__AnswerTypesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAnswerTypesAnswerTypeParserRuleCall_4_0()); }
	ruleAnswerType{ after(grammarAccess.getQuestionAccess().getAnswerTypesAnswerTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__ChooseFromsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getChooseFromsChooseFromParserRuleCall_5_0()); }
	ruleChooseFrom{ after(grammarAccess.getQuestionAccess().getChooseFromsChooseFromParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionContent__QcontentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionContentAccess().getQcontentSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getQuestionContentAccess().getQcontentSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnswerType__AtypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerTypeAccess().getAtypeAlternatives_1_0()); }
(rule__AnswerType__AtypeAlternatives_1_0)
{ after(grammarAccess.getAnswerTypeAccess().getAtypeAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseFrom__ChoiseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChooseFromAccess().getChoiseSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getChooseFromAccess().getChoiseSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


